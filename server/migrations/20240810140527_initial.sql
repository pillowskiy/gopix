-- +goose Up
-- +goose StatementBegin
CREATE TABLE
    IF NOT EXISTS "users" (
        "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        "username" varchar(255) UNIQUE NOT NULL,
        "email" varchar(255) UNIQUE NOT NULL,
        "permissions" bigint NOT NULL DEFAULT 0,
        "password_hash" varchar(255) NOT NULL,
        "avatar_url" varchar(255) DEFAULT '',
        "created_at" timestamp DEFAULT (current_timestamp),
        "updated_at" timestamp DEFAULT (current_timestamp)
    );

CREATE TYPE access_level AS ENUM ('link', 'private', 'public');

CREATE TABLE
    IF NOT EXISTS "images" (
        "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        "author_id" int NOT NULL,
        "path" varchar(255) NOT NULL,
        "title" varchar(255) DEFAULT '',
        "description" text DEFAULT '',
        "access_level" access_level DEFAULT 'link',
        "expires_at" timestamp,
        "uploaded_at" timestamp DEFAULT (current_timestamp),
        "updated_at" timestamp DEFAULT (current_timestamp)
    );

CREATE TABLE
    IF NOT EXISTS "albums" (
        "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        "author_id" int NOT NULL,
        "name" varchar(255) NOT NULL,
        "description" text DEFAULT '',
        "created_at" timestamp DEFAULT (current_timestamp),
        "updated_at" timestamp DEFAULT (current_timestamp)
    );

CREATE TABLE
    IF NOT EXISTS "images_to_albums" ("album_id" int NOT NULL, "image_id" int NOT NULL);

CREATE TABLE
    IF NOT EXISTS "tags" (
        "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        "name" varchar(50) UNIQUE NOT NULL,
        "created_at" timestamp DEFAULT (current_timestamp),
        "updated_at" timestamp DEFAULT (current_timestamp)
    );

CREATE TABLE
    IF NOT EXISTS "comments" (
        "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        "author_id" int NOT NULL,
        "image_id" int NOT NULL,
        "comment" text NOT NULL,
        "created_at" timestamp DEFAULT (current_timestamp),
        "updated_at" timestamp DEFAULT (current_timestamp)
    );

CREATE TABLE
    IF NOT EXISTS "images_to_tags" ("image_id" int NOT NULL, "tag_id" int NOT NULL);

CREATE TABLE
    IF NOT EXISTS "images_to_views" ("user_id" int NOT NULL, "image_id" int NOT NULL);

CREATE TABLE
    IF NOT EXISTS "images_to_likes" ("user_id" int NOT NULL, "image_id" int NOT NULL);

ALTER TABLE "images" ADD CONSTRAINT fk_images_author_id FOREIGN KEY ("author_id") REFERENCES "users" ("id") ON DELETE SET NULL ON UPDATE CASCADE;

ALTER TABLE "albums" ADD CONSTRAINT fk_albums_author_id FOREIGN KEY ("author_id") REFERENCES "users" ("id") ON DELETE SET NULL ON UPDATE CASCADE;

ALTER TABLE "images_to_albums" ADD CONSTRAINT fk_images_to_albums_album_id FOREIGN KEY ("album_id") REFERENCES "albums" ("id") ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE "images_to_albums" ADD CONSTRAINT fk_images_to_albums_image_id FOREIGN KEY ("image_id") REFERENCES "images" ("id") ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE "comments" ADD CONSTRAINT fk_comments_author_id FOREIGN KEY ("author_id") REFERENCES "users" ("id") ON DELETE SET NULL ON UPDATE CASCADE;

ALTER TABLE "comments" ADD CONSTRAINT fk_comments_image_id FOREIGN KEY ("image_id") REFERENCES "images" ("id") ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE "images_to_tags" ADD CONSTRAINT fk_images_to_tags_image_id FOREIGN KEY ("image_id") REFERENCES "images" ("id") ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE "images_to_tags" ADD CONSTRAINT fk_images_to_tags_tag_id FOREIGN KEY ("tag_id") REFERENCES "tags" ("id") ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE "images_to_views" ADD CONSTRAINT fk_images_to_views_user_id FOREIGN KEY ("user_id") REFERENCES "users" ("id") ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE "images_to_views" ADD CONSTRAINT fk_images_to_views_image_id FOREIGN KEY ("image_id") REFERENCES "images" ("id") ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE "images_to_likes" ADD CONSTRAINT fk_images_to_likes_user_id FOREIGN KEY ("user_id") REFERENCES "users" ("id") ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE "images_to_likes" ADD CONSTRAINT fk_images_to_likes_image_id FOREIGN KEY ("image_id") REFERENCES "images" ("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- +goose StatementEnd
-- +goose Down
-- +goose StatementBegin
ALTER TABLE "images_to_likes"
DROP CONSTRAINT IF EXISTS fk_images_to_likes_user_id;

ALTER TABLE "images_to_likes"
DROP CONSTRAINT IF EXISTS fk_images_to_likes_image_id;

ALTER TABLE "images_to_views"
DROP CONSTRAINT IF EXISTS fk_images_to_views_user_id;

ALTER TABLE "images_to_views"
DROP CONSTRAINT IF EXISTS fk_images_to_views_image_id;

ALTER TABLE "images_to_tags"
DROP CONSTRAINT IF EXISTS fk_images_to_tags_image_id;

ALTER TABLE "images_to_tags"
DROP CONSTRAINT IF EXISTS fk_images_to_tags_tag_id;

ALTER TABLE "comments"
DROP CONSTRAINT IF EXISTS fk_comments_author_id;

ALTER TABLE "comments"
DROP CONSTRAINT IF EXISTS fk_comments_image_id;

ALTER TABLE "images_to_albums"
DROP CONSTRAINT IF EXISTS fk_images_to_albums_album_id;

ALTER TABLE "images_to_albums"
DROP CONSTRAINT IF EXISTS fk_images_to_albums_image_id;

ALTER TABLE "albums"
DROP CONSTRAINT IF EXISTS fk_albums_author_id;

ALTER TABLE "images"
DROP CONSTRAINT IF EXISTS fk_images_author_id;

DROP TABLE IF EXISTS "images_to_likes" CASCADE;

DROP TABLE IF EXISTS "images_to_views" CASCADE;

DROP TABLE IF EXISTS "images_to_tags" CASCADE;

DROP TABLE IF EXISTS "comments" CASCADE;

DROP TABLE IF EXISTS "images_to_albums" CASCADE;

DROP TABLE IF EXISTS "tags" CASCADE;

DROP TABLE IF EXISTS "albums" CASCADE;

DROP TABLE IF EXISTS "images" CASCADE;

DROP TABLE IF EXISTS "users" CASCADE;

-- +goose StatementEnd